// Copyright 2015-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-ecs-cli/ecs-cli/modules/cli/compose/factory (interfaces: ProjectFactory)

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	reflect "reflect"

	project "github.com/aws/amazon-ecs-cli/ecs-cli/modules/cli/compose/project"
	gomock "github.com/golang/mock/gomock"
	cli "github.com/urfave/cli"
)

// MockProjectFactory is a mock of ProjectFactory interface
type MockProjectFactory struct {
	ctrl     *gomock.Controller
	recorder *MockProjectFactoryMockRecorder
}

// MockProjectFactoryMockRecorder is the mock recorder for MockProjectFactory
type MockProjectFactoryMockRecorder struct {
	mock *MockProjectFactory
}

// NewMockProjectFactory creates a new mock instance
func NewMockProjectFactory(ctrl *gomock.Controller) *MockProjectFactory {
	mock := &MockProjectFactory{ctrl: ctrl}
	mock.recorder = &MockProjectFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectFactory) EXPECT() *MockProjectFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockProjectFactory) Create(arg0 *cli.Context, arg1 bool) (project.Project, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(project.Project)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockProjectFactoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockProjectFactory)(nil).Create), arg0, arg1)
}
